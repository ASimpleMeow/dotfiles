# Basic variables
set shell zsh
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
$lf -remote "send $id set previewer ${XDG_CONFIG_HOME:-$HOME/.config}/lf/preview"

# Commands
cmd open ${{
    test -L $f && f=$(readlink -f $f)
    case $(file --mime-type $f -bL) in
        text/*|application/json) $EDITOR "$fx" ;;
        application/zip) unzip "$fx" ;;
        video/*|image/*|application/pdf) xdg-open "$fx" & disown ;;
    esac
}}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd unarchive ${{
  case "$f" in
    *.zip) unzip "$f" ;;
    *.tar.gz) tar -xzvf "$f" ;;
    *.tar.bz2) tar -xjvf "$f" ;;
    *.tar) tar -xvf "$f" ;;
    *) echo "Unsupported format" ;;
  esac
}}


cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd fzf_jump ${{
    res="$(find . -maxdepth 1 | fzf --reverse --header='Jump to location' | sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ]; then
        cmd="cd"
    else 
        cmd="select"                                                       
    fi
    lf -remote "send $id $cmd \"$res\""
}}

# Bindings
map <enter> shell
map x $$f
map X !$f
map D delete
map o &mimeopen $f
map O $mimeopen --ask $f
map <c-f> :fzf_jump


# define a custom 'rename' command without prompt for overwrite
# cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
# map r push :rename<space>

# use '<delete>' key for either 'trash' or 'delete' command
# map <delete> trash
# map <delete> delete
